@using IndustrialContoroler.ViewModel
@*@model NotificationVM
*@

@model List<Noti>
@inject IndustrialContorolerDatabaseContext _context

@inject IHttpContextAccessor _sessions
@inject UserManager<AppUsers> _userManager
<!-- Content wrapper -->
<!-- Content -->
@{

    int countersender = 1;
    int countereciver = 1;
    var user = await _userManager.FindByNameAsync(User.Identity?.Name);

}


<div class="card-body">
    <ul style="font-family: 'Cairo', sans-serif; font-size:18px;" class="nav nav-tabs nav-tabs-bordered">





        <li class="nav-item" style="font-family: 'Cairo', sans-serif; font-size:18px;">
            <button class="nav-link" id="reciveNotification" style="font-family: 'Cairo', sans-serif; font-size:18px;"><i class="bx bx-star me-1"></i> اشعارات واردة</button>
        </li>

        <li class="nav-item">
            <button class="nav-link" id="SendNotification" style="font-family: 'Cairo', sans-serif; font-size:18px;"><i class="bx bx-check-circle me-2"></i> اشعارات صادرة </button>
        </li>

    </ul>
    <div id="reciveNotificationDiv">
        <div class="card m-3 mb-5 p-2">
            <div class="table-responsive m">
                @*<a class="btn btn-primary gradient-buttons h-px-35 my-3 mx-3  col-md-2" role="button"
                    asp-controller="Notification" asp-action="Create" method="Post">
                    <i class="bx bx-message-add bx-sm" style=" font-size: small;"></i>   إضافة إشعار
                    </a> *@
                <table class="datatables-ajax table table-bordered table-hover">
                    <thead>
                        <tr>

                            <th style="font-family: 'Almarai', sans-serif; font-size:16px;" scope="col">رقم الإشعار</th>
                            <th style="font-family: 'Almarai', sans-serif; font-size:16px;" scope="col">اسم الإشعار</th>
                            <th style="font-family: 'Almarai', sans-serif; font-size:16px;" scope="col">بيان الإشعار</th>

                            <th style="font-family: 'Almarai', sans-serif; font-size:16px;" scope="col">المصدر</th>
                            <th style="font-family: 'Almarai', sans-serif; font-size:16px;" scope="col">حالة الأشعار</th>

                            <th style="font-family: 'Almarai', sans-serif; font-size:16px;" scope="col"> تاريخ الأشعار</th>
                            <th style="font-family: 'Almarai', sans-serif; font-size:16px;" scope="col">الإجراءات</th>

                        </tr>
                    </thead>

                    @if (Model is not null)
                    {
                        <tbody style="font-family: 'Cairo', sans-serif; font-size:14px;" class="table-border-bottom-0">
                            @foreach (var item in Model.Where(x => x.IsDeleted.Equals(false) && x.Receiver == user.Id).OrderByDescending(x => x.Date)
                           )
                            {

                                <tr>
                                    <td><span class="text-center"> @countereciver</span></td>
                                    <td><span class="text-center"> @item.Title</span></td>
                                    <td style="max-width:200px; overflow:hidden; text-overflow: ellipsis; white-space:nowrap;">
                                        <span class="text-center"> @item.Description </span>
                                    </td>
                                    <td><span class="text-center"> @item.Sender </span> </td>
                                    <td>
                                        @if (!item.IsRead)
                                        {



                                            <form method="post" action="@Url.Action("MarkAsRead", "Notification", new { id = item.Id })">
                                                <a href="javascript:void(0)"
                                       class="dropdown-notifications-all text-body"
                                       data-bs-toggle="tooltip"
                                       data-bs-placement="top"
                                       title=" استلام الأشعار">

                                                    <button type="submit" style="width:70px; height:30px;" class="btn btn-icon btn-outline-primary">
                                                        <span class="bx fs-4 bx-envelope-open"></span>
                                                    </button>
                                                </a>
                                            </form>
                                        }
                                        else
                                        {
                                            <span class="text-center badge bg-label-success me-1"> تم الأستلام </span>
                                        }
                                    </td>

                                    <td> <span class="text-center"> @item.Date</span></td>



                                    <td>
                                        <div class="dropdown">
                                            <button type="button" class="btn dropdown-toggle hide-arrow p-0" data-bs-toggle="dropdown">
                                                <i class="bx bx-dots-vertical-rounded"></i>
                                            </button>
                                            <div class="dropdown-menu">


                                                @*  <button class="dropdown-item delete-button" data-bs-toggle="modal" data-bs-target="#DeleteModel" onclick="Delete('@item.Id')">
                                                    <i class="bx bx-trash me-1"></i> حذف
                                                    </button>*@
                                                <a class="dropdown-item" asp-route-Id="@item.Id" asp-controller="Notification" asp-action="Detail"><i class="fas fa-eye"></i> عرض</a>


                                            </div>
                                        </div>
                                    </td>
                                </tr>
                                countereciver = countereciver + 1;
                            }
                        </tbody>


                    }
                </table>


            </div>
        </div>
    </div>

    @*    the Send Message
    *@
    <div id="SendNotificationDiv">
        <div class="card m-3 mb-5 p-2">
            <div class="table-responsive m">

                <a style="font-family: 'Cairo', sans-serif; font-size:14px;" class="btn btn-primary gradient-buttons h-px-35 my-3 mx-3  col-md-2" role="button"
                   asp-action="Create" asp-controller="Notification">
                    <i class="fas fa-plus" style=" font-size: small;"></i> إضافة أشعار
                </a>
                <table class="datatables-ajax table table-bordered table-hover">
                    <thead>
                        <tr>

                            <th style="font-family: 'Almarai', sans-serif; font-size:16px;" scope="col">رقم الإشعار</th>
                            <th style="font-family: 'Almarai', sans-serif; font-size:16px;" scope="col">اسم الإشعار</th>
                            <th style="font-family: 'Almarai', sans-serif; font-size:16px;" scope="col">بيان الإشعار</th>

                            <th style="font-family: 'Almarai', sans-serif; font-size:16px;" scope="col">حالة الأشعار</th>

                            <th style="font-family: 'Almarai', sans-serif; font-size:16px;" scope="col"> تاريخ الأشعار</th>
                            <th style="font-family: 'Almarai', sans-serif; font-size:16px;" scope="col">الإجراءات</th>

                        </tr>
                    </thead>


                    <tbody style="font-family: 'Cairo', sans-serif; font-size:14px;" class="table-border-bottom-0">
                        @foreach (var item in Model.Where(x => x.IsDeleted.Equals(false) && x.Sender == user.FullName).OrderByDescending(n => n.Date)
                        )
                        {

                            <tr>
                                <td><span class="text-center"> @countersender</span></td>
                                <td><span class="text-center"> @item.Title</span></td>
                                <td style="max-width:150px; overflow:hidden; text-overflow: ellipsis; white-space:nowrap;">
                                    <span class="text-center"> @item.Description </span>
                                </td>
                                @if (!item.IsRead)
                                {
                                    <td><span class="text-center badge bg-label-warning me-1"> لم يٌستلم بعد</span> </td>
                                }
                                else
                                {
                                    <td><span class="text-center badge bg-label-success me-1"> تم الأستلام</span> </td>
                                }

                                <td> <span class="text-center"> @item.Date</span></td>

                                <td>
                                    <div class="dropdown">
                                        <button type="button" class="btn dropdown-toggle hide-arrow p-0" data-bs-toggle="dropdown">
                                            <i class="bx bx-dots-vertical-rounded"></i>
                                        </button>
                                        <div class="dropdown-menu">



                                            @*<button class="dropdown-item delete-button" data-bs-toggle="modal" data-bs-target="#DeleteModel" onclick="Delete('@item.Id')">
                                                <i class="bx bx-trash me-1"></i> حذف
                                                </button>*@
                                            <a class="dropdown-item" asp-route-Id="@item.Id" asp-controller="Notification" asp-action="Detail"><i class="fas fa-eye"></i> عرض</a>

                                        </div>
                                    </div>
                                </td>
                            </tr>

                            countersender = countersender + 1;

                        }

                    </tbody>



                </table>


            </div>
        </div>
    </div>




</div>




@*//javascript*@
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>


    $("#SendNotificationDiv").hide();

    document.getElementById("reciveNotification").style.color = "Blue";

    if ($('html').hasClass('dark-style')) {

        $("#reciveNotification").click(function () {
            $("#reciveNotificationDiv").show();
            $("#SendNotificationDiv").hide();

            document.getElementById("reciveNotification").style.color = "Blue";
            document.getElementById("SendNotification").style.color = "white";

        });


        $("#SendNotification").click(function () {
            $("#reciveNotificationDiv").hide();
            $("#SendNotificationDiv").show();


            document.getElementById("reciveNotification").style.color = "white";
            document.getElementById("SendNotification").style.color = "Blue";

        });




    }
    else {
        $("#reciveNotification").click(function () {
            $("#reciveNotificationDiv").show();
            $("#SendNotificationDiv").hide();


            document.getElementById("reciveNotification").style.color = "Blue";
            document.getElementById("SendNotification").style.color = "#516377";

        });


        $("#SendNotification").click(function () {
            $("#reciveNotificationDiv").hide();
            $("#SendNotificationDiv").show();


            document.getElementById("reciveNotification").style.color = "#516377";
            document.getElementById("SendNotification").style.color = "Blue";

        });



    }
</script>


@section scripts {

    @if (!string.IsNullOrEmpty(_sessions.HttpContext.Session.GetString(Helper.MsgType)))
    {
        if (_sessions.HttpContext.Session.GetString(Helper.MsgType) == Helper.Success)
        {
<script>

    Swal.fire({
        title: '@_sessions.HttpContext.Session.GetString(Helper.Title)',
        text: '@Html.Raw(@_sessions.HttpContext.Session.GetString(Helper.Msg))',
        confirmButtonText: '@ResourceWeb.lbOk',
        icon: 'success'
    });
</script>

        }
        else
        {
<script>

    Swal.fire({
        title: '@_sessions.HttpContext.Session.GetString(Helper.Title)',
        text: '@Html.Raw(@_sessions.HttpContext.Session.GetString(Helper.Msg))',
        confirmButtonText: '@ResourceWeb.lbOk',
        icon: 'error'
    });
</script>
        }
        _sessions.HttpContext.Session.SetString(Helper.MsgType, "");
    }

    @*<script src="~/Modules/notificatiom.js"></script>
*@
<script>

    function Delete(id) {
        Swal.fire({
            title: lbTitleMsgDelete,
            text: lbTextMsgDelete,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: lbconfirmButtonText,
            cancelButtonText: lbcancelButtonText
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = `/Notification/Delete?Id=${id}`;

                Swal.fire(
                    lbTitleDeletedOk,
                    lbMsgDeletedOkRole,
                    lbSuccess
                )
            }
        })
    }
</script>


<script>

    let lbTitleEdit = '@Html.Raw(ResourceWeb.lbTitleEdit)';
    let lbEdit = '@Html.Raw(ResourceWeb.lbEdit)';
    let lbAddNewRole = '@Html.Raw(ResourceWeb.lbAddNewRole)';
    let lbbtnSave = '@Html.Raw(ResourceWeb.lbbtnSave)';

    let lbTitleMsgDelete = '@Html.Raw(ResourceWeb.lbTitleMsgDelete)';
    let lbTextMsgDelete = '@Html.Raw(ResourceWeb.lbTextMsgDelete)';
    let lbconfirmButtonText = '@Html.Raw(ResourceWeb.lbconfirmButtonText)';
    let lbcancelButtonText = '@Html.Raw(ResourceWeb.lbcancelButtonText)';

    let lbTitleDeletedOk = '@Html.Raw(ResourceWeb.lbTitleDeletedOk)';
    let lbMsgDeletedOkRole = '@Html.Raw(ResourceWeb.lbMsgDeletedOkRole)';
    let lbSuccess = '@Html.Raw(Helper.Success)';

</script>

}
