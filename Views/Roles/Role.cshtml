@using Microsoft.AspNetCore.Identity
@using IndustrialContoroler.Resource
@using IndustrialContoroler.ViewModel
@using Microsoft.AspNetCore.Http;
@model RoleVM
@inject IHttpContextAccessor _sessions

@if (TempData.ContainsKey("msg"))
{
    <div class="alert alert-info">@TempData["msg"]</div>
}
@{
    int counter = 1;
}




<!-- Ajax Sourced Server-side -->


<div class="card m-3 mb-5">
    <h3 style="font-family: 'Cairo', sans-serif; font-size:20px;  background-color: rgb(82, 134, 203); color: azure;" class=" card-header py-3 mb-10 "><img class="me-3" src="~/img/report25.png" alt="">  ادارة الصلاحيات  </h3>

    <div class="table-responsive p-2">

        <a style="font-family: 'Almarai', sans-serif; font-size:16px; color:white;" class="btn btn-primary gradient-buttons h-px-35 my-3 mx-3  col-md-2" role="button" data-bs-toggle="offcanvas"
           data-bs-target="#addNewRole" onclick="Rest()">
            <i class="fas fa-plus" style=" font-size: small;"></i> إضافة صلاحية
        </a>

        <table class="datatables-ajax table table-bordered table-hover ">
            <thead style="font-family: 'Almarai', sans-serif; font-size:16px;" class="border-top">
                <tr>
                    <th style="font-family: 'Almarai', sans-serif; font-size:16px;" scope="col">الرقم</th>
                    <th style="font-family: 'Almarai', sans-serif; font-size:16px;" scope="col"> اسم المجموعة</th>

                    <th style="font-family: 'Almarai', sans-serif; font-size:16px;" scope="col">الأجرائات</th>

                </tr>
            </thead>
            <tbody style="font-family: 'Cairo', sans-serif; font-size:14px;">
                @foreach (var item in Model.Roles)
                {
                    if (item.Name != Helper.Progreammer)
                    {
                        <tr>

                            <td><span class="text-center"> @counter</span></td>
                            <td>

                                <span class="text-center"> @item.Name </span>
                            </td>



                            <td>

                                @if (item.Name == Helper.SuperAdmin || item.Name == Helper.ReEmployee
                  || item.Name == Helper.TechnicalSpecialist || item.Name == Helper.SysAdminsitrator)
                                {
                                    <div class="dropdown">
                                        <button type="button" class="btn dropdown-toggle hide-arrow p-0" data-bs-toggle="dropdown">
                                            <i class="bx bx-dots-vertical-rounded"></i>
                                        </button>
                                        <div class="dropdown-menu">


                                            <a class="dropdown-item" data-bs-target="#DeleteModel" asp-action="Index" asp-controller="Permissions" asp-route-RoleId="@item.Id">
                                                <i class="bx bx-check-shield"></i> @ResourceWeb.lbbtnPermissions
                                            </a>

                                        </div>

                                    </div>
                                }
                                else
                                {
                                    <div class="dropdown">
                                        <button type="button" class="btn dropdown-toggle hide-arrow p-0" data-bs-toggle="dropdown">
                                            <i class="bx bx-dots-vertical-rounded"></i>
                                        </button>
                                        <div class="dropdown-menu">

                                            <button class="dropdown-item" data-bs-toggle="offcanvas" data-bs-target="#addNewRole"
                                                onclick="Edit('@item.Id', '@item.Name')">
                                                <i class="bx bx-pencil  me-1"></i>@ResourceWeb.lbbtnEdit
                                            </button>

                                            <button class="dropdown-item" data-bs-toggle="modal" data-bs-target="#DeleteModel" onclick="Delete('@item.Id')">
                                                <i class="bx bx-trash me-1"></i> @ResourceWeb.lbbtnDelete
                                            </button>
                                            <a class="dropdown-item" data-bs-target="#DeleteModel" asp-action="Index" asp-controller="Permissions" asp-route-RoleId="@item.Id">
                                                <i class="bx bx-check-shield"></i> @ResourceWeb.lbbtnPermissions
                                            </a>

                                        </div>

                                    </div>

                                }
                            </td>
                        </tr>
                        counter = counter + 1;
                    }
                }
            </tbody>
        </table>
    </div>

</div>
<!--/ Ajax Sourced Server-side -->
<!--content-->
<div class="content-backdrop fade"></div>



<!-- Modal add and update -->

<div class="offcanvas offcanvas-end" id="addNewRole" aria-hidden="true" aria-labelledby="exampleModalLabel">
    <div class="offcanvas-header border-bottom">
        <h6 style="font-family: 'Almarai', sans-serif; font-size:20px;" class="offcanvas-title" id="title">@ResourceWeb.lbbtnSaveNewRole</h6>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas"
                aria-label="Close"></button>
    </div>
    <div class="offcanvas-body flex-grow-0 mx-0">
        <form class="pt-0" id="AddUnitForm" asp-action="Role" asp-controller="Roles" method="post">


            <div class="mb-3">
                <input type="text" hidden class="form-control" asp-for="NewRole.RoleId" id="roleId" />
                <label asp-for="NewRole.RoleName" style="font-family: 'Almarai', sans-serif; font-size:18px;" class="control-lable">@ResourceWeb.lbNameRole</label>
                <input type="text" class="form-control" asp-for="NewRole.RoleName" id="roleName" />
                <span asp-validation-for="NewRole.RoleName" class="text-danger"></span>
            </div>

            <input type="submit"
                   class="btn btn-primary data-submit me-1 me-sm-3 d-grid w-100 my-2" value="@ResourceWeb.lbbtnSave" id="btnSave" />
            <button type="reset" class="btn btn-label-secondary d-grid w-100"
                    data-bs-dismiss="offcanvas">
                إلغاء
            </button>
        </form>
    </div>
</div>



@section Scripts{
    @if (!string.IsNullOrEmpty(_sessions.HttpContext.Session.GetString(Helper.MsgType)))
    {
        if (Context.Session.GetString(Helper.MsgType) == Helper.Success)
        {
            <script>

                Swal.fire({
                    title: '@_sessions.HttpContext.Session.GetString(Helper.Title)',
                    text: '@Html.Raw(@_sessions.HttpContext.Session.GetString(Helper.Msg))',
                    confirmButtonText: '@ResourceWeb.lbOk',
                    icon: 'success'
                });
            </script>

        }
        else
        {
            <script>

                Swal.fire({
                    title: '@_sessions.HttpContext.Session.GetString(Helper.Title)',
                    text: '@Html.Raw(@_sessions.HttpContext.Session.GetString(Helper.Msg))',
                    confirmButtonText: '@ResourceWeb.lbOk',
                    icon: 'error'
                });
            </script>
        }
        Context.Session.SetString(Helper.MsgType, "");
    }

          @*  <script src="~/Modules/Roles.js"></script>
*@



    <script>
        function Delete(id) {
            Swal.fire({
                title: lbTitleMsgDelete,
                text: lbTextMsgDelete,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: lbconfirmButtonText,
                cancelButtonText: lbcancelButtonText
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = `/Roles/Delete?Id=${id}`;
                    Swal.fire(
                        lbTitleDeletedOk,
                        lbMsgDeletedOkRole,
                        lbSuccess,
                        lbTimer
                    )
                }
            })
        }

        Edit = (id, name) => {
            document.getElementById("title").innerHTML = lbTitleEdit;
            document.getElementById("btnSave").value = lbEdit;
            document.getElementById("roleId").value = id;
            document.getElementById("roleName").value = name;

        }

        Rest = () => {
            document.getElementById("title").innerHTML = lbAddNewRole;
            document.getElementById("btnSave").value = lbbtnSave;
            document.getElementById("roleId").value = "";
            document.getElementById("roleName").value = "";
        }

    </script>
    <script>

        let lbTitleEdit = '@Html.Raw(ResourceWeb.lbTitleEdit)';
        let lbEdit = '@Html.Raw(ResourceWeb.lbEdit)';
        let lbAddNewRole = '@Html.Raw(ResourceWeb.lbAddNewRole)';
        let lbbtnSave = '@Html.Raw(ResourceWeb.lbbtnSave)';

        let lbTitleMsgDelete = '@Html.Raw(ResourceWeb.lbbtnDelete)';
        let lbTextMsgDelete = '@Html.Raw(ResourceWeb.lbTextMsgDelete)';
        let lbconfirmButtonText = '@Html.Raw(ResourceWeb.lbconfirmButtonText)';
        let lbcancelButtonText = '@Html.Raw(ResourceWeb.lbcancelButtonText)';

        let lbTitleDeletedOk = '@Html.Raw(ResourceWeb.lbTitleDeletedOk)';
        let lbMsgDeletedOkRole = '@Html.Raw(ResourceWeb.lbMsgDeletedOkRole)';
        let lbSuccess = '@Html.Raw(Helper.Success)';
        let lbTimer = '@Html.Raw(Helper.Timer)';

    </script>
    }